# -*- in-config-file: t -*-

reminder to self: g<tab> unfolds headings, for when you open this file and forget the keybinding.

* Wth?
This is the readme for the github repo where I attempt to make myself a functional emacs configuration from 
naked emacs. It's running on a raspberry pi, with the idea that after I make it sufficiently functional 
(which could be, like, years), then

This is also the configuration file itself, because I'm doing fancy org babel literate config stuff.

So, that's cool.

* Package management

** Make MELPA run

*** Cargo-Cult Incantation

This is an incantation that appears to be required to get MELPA to work. I've got no idea why, but 
it comes from this place: 
https://francopasut.medium.com/emacs-melpa-and-the-failed-to-download-gnu-archive-error-b834bbe4491e

May be platform specific, I should probably try getting rid of this when I move the whole config off 
the raspberry pi where I'm putting this together and onto the mac. (call that production rather than 
development.)

#+BEGIN_SRC emacs-lisp
(setq gnutls-algorithm-priority "NORMAL:-VERS-TLS1.3")
#+END_SRC

**** TODO figure out some way to label code blocks to consider removing in production

** The rest of the setup for melpa, as copied from evil installation instructions 

#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(package-initialize)
(package-refresh-contents)
#+END_SRC

** Use-Package seems necessary

#+BEGIN_SRC emacs-lisp
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(require 'use-package)
#+END_SRC


* Evilify everything because emacs keybindings are horrible

** Base evil 

#+BEGIN_SRC emacs-lisp

(use-package evil
  :ensure t ;; install the evil package if not installed
  :init 
  (setq evil-want-keybinding nil))  ;; this is apparently required for evil-collection keybindings.
  (evil-mode)

#+END_SRC

** Add more evil bindings
Let's get as much evilified as humanly possible just to start, eh?

#+BEGIN_SRC emacs-lisp
(use-package evil-commentary
  :ensure t)
(evil-commentary-mode)

(use-package evil-collection
  :ensure t)
(evil-collection-init)

(use-package evil-org
  :ensure t
  :after org
  :config
  (add-hook 'org-mode-hook 'evil-org-mode)
  (add-hook 'evil-org-mode-hook
            (lambda ()
              (evil-org-set-key-theme)))
  (require 'evil-org-agenda)
  (evil-org-agenda-set-keys))
#+END_SRC

* Keybinding to make delimiter for elisp blocks with @ 

This is slightly black-magic-ey.  add-lisp-delimiters is defined in init.el. 
That function looks for a variable called in-config-file, and, if it's set 
(as it is on the very first line of this file... and apparently it has to be the very 
first line, the second line won't do), then it pastes in the BEGIN_SRC stuff. So I bind it to ampersand, 
because I don't *think* anything else uses @ ...?

This is something I may wish to remove in production too.


#+BEGIN_SRC emacs-lisp

(add-hook 'org-mode-hook 
  (lambda () 
    (evil-global-set-key 'normal (kbd "@") 'add-lisp-delimiters)))

#+END_SRC

