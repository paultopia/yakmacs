
* Wth?
This is the readme for the github repo where I attempt to make myself a functional emacs configuration from 
naked emacs. It's running on a raspberry pi, with the idea that after I make it sufficiently functional 
(which could be, like, years), then

This is also the configuration file itself, because I'm doing fancy org babel literate config stuff.

So, that's cool.

* Make MELPA run

This is an incantation that appears to be required to get MELPA to work. I've got no idea why, but 
it comes from this place: 
https://francopasut.medium.com/emacs-melpa-and-the-failed-to-download-gnu-archive-error-b834bbe4491e

#+BEGIN_SRC emacs-lisp
(setq gnutls-algorithm-priority "NORMAL:-VERS-TLS1.3")
#+END_SRC

The rest of the setup for melpa, as copied from evil installation instructions 

#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(package-initialize)
(package-refresh-contents)
#+END_SRC

* Evilify everything because emacs keybindings are horrible

Download and install evil 

#+BEGIN_SRC emacs-lisp
(unless (package-installed-p 'evil)
  (package-install 'evil))
(setq evil-want-keybinding nil)  ;; this is apparently required for evil-collection keybindings.
(require 'evil)
(evil-mode 1)
#+END_SRC

Let's get as much evilified as humanly possible just to start, eh?

#+BEGIN_SRC emacs-lisp
(unless (package-installed-p 'evil-commentary)
  (package-install 'evil-commentary))
(require 'evil-commentary)
(evil-commentary-mode)

(unless (package-installed-p 'evil-collection)
  (package-install 'evil-collection))
(require 'evil-collection)
(evil-collection-init)
#+END_SRC

I really need to learn how to define a function in elisp rather than retyping all that 
package installation stuff again.  Although with that quoting stuff I fear a macro 
may have to be involved.  Does elisp have macros?  Surely it does, it's a lisp...

I should probably learn how to actually activate packages, also. No clue whether 
those require statements are all necessary. LOL.

